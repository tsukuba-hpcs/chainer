version: 2
jobs:
  build:
    docker:
      - image: masayukitakagi/0mdayl9l:latest
    steps:

      # Checkout
      - checkout

      # Environment info
      - run:
          name: Environment info
          command: |
            source activate testenv

            echo "PWD: $PWD"

            g++ --version
            cmake --version
            clang-format --version
            python --version

            echo
            echo "----- conda -----"
            conda info -a

      # Setup conda environment
      - run:
          name: Setup conda environment
          command: |
            source activate testenv

            pip install -U hacking autopep8
            pip install -U pytest pytest-cov coveralls

      # Python PEP-8 check
      - run:
          name: Python PEP-8 check
          command: |
            source activate testenv

            flake8 --version
            flake8 setup.py python tests

            autopep8 --version
            autopep8 setup.py python tests -r --global-config .pep8 --diff | tee check_autopep8
            test ! -s check_autopep8

      # Python test
      - run:
          name: Python test
          command: |
            source activate testenv

            python setup.py build --debug --build-temp ./build --build-lib ./build develop
            pytest -m='not cuda' --cov --no-cov-on-fail --cov-fail-under=80 --cov-report html:build/coverage/python

      # ClangFormat
      - run:
          name: ClangFormat
          command: |
            find xchainer \( -name '*.cc' -o -name '*.h' -o -name '*.cu' \) -type f -print0 | xargs -0 -P4 -I{} bash -c 'diff -u {} <(clang-format {})'

      # C++ test
      - run:
          name: C++ test
          command: |
            source activate testenv

            ( mkdir -p build && cd build && cmake -DBUILD_PYTHON=1 -DENABLE_COVERAGE=ON .. && make clang-tidy && make && ctest -V )
            lcov -c -b xchainer -d build/xchainer/ --no-external -o build/coverage.info
            genhtml build/coverage.info -o build/coverage/cpp

      - store_artifacts:
          path: build/coverage
